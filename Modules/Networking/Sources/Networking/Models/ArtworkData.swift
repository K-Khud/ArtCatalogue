//
// ArtworkData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ArtworkData: Codable, Hashable, Identifiable {

    public var id: Double
//    public var apiModel: String
//    public var apiLink: String
//    public var isBoosted: Bool
    public var title: String
//    public var altTitles: AnyCodable?
//    public var thumbnail: Thumbnail
//    public var mainReferenceNumber: String
//    public var hasNotBeenViewedMuch: Bool
//    public var boostRank: AnyCodable?
//    public var dateStart: Double
//    public var dateEnd: Double
    public var dateDisplay: String
//    public var dateQualifierTitle: String
//    public var dateQualifierId: Double
    public var artistDisplay: String
    public var placeOfOrigin: String
//    public var dimensions: String
//    public var mediumDisplay: String
//    public var inscriptions: AnyCodable?
//    public var creditLine: String
//    public var publicationHistory: AnyCodable?
//    public var exhibitionHistory: AnyCodable?
//    public var provenanceText: AnyCodable?
//    public var publishingVerificationLevel: String
//    public var internalDepartmentId: Double
//    public var fiscalYear: AnyCodable?
//    public var fiscalYearDeaccession: AnyCodable?
//    public var isPublicDomain: Bool
//    public var isZoomable: Bool
//    public var maxZoomWindowSize: Double
//    public var copyrightNotice: AnyCodable?
//    public var hasMultimediaResources: Bool
//    public var hasEducationalResources: Bool
//    public var colorfulness: Double
//    public var color: AnyCodable?
//    public var latitude: AnyCodable?
//    public var longitude: AnyCodable?
//    public var latlon: AnyCodable?
//    public var isOnView: Bool
//    public var onLoanDisplay: AnyCodable?
//    public var galleryTitle: String
//    public var galleryId: Double
//    public var artworkTypeTitle: String
//    public var artworkTypeId: Double
//    public var departmentTitle: String
//    public var departmentId: String
//    public var artistId: Double
//    public var artistTitle: String
//    public var altArtistIds: [AnyCodable]
//    public var artistIds: [AnyCodable]
//    public var artistTitles: [AnyCodable]
//    public var categoryIds: [AnyCodable]
//    public var categoryTitles: [AnyCodable]
//    public var artworkCatalogueIds: [AnyCodable]
//    public var termTitles: [AnyCodable]
//    public var styleId: AnyCodable?
//    public var styleTitle: AnyCodable?
//    public var altStyleIds: [AnyCodable]
//    public var styleIds: [AnyCodable]
//    public var styleTitles: [AnyCodable]
//    public var classificationId: String
//    public var classificationTitle: String
//    public var altClassificationIds: [AnyCodable]
//    public var classificationIds: [AnyCodable]
//    public var classificationTitles: [AnyCodable]
//    public var subjectId: String
//    public var altSubjectIds: [AnyCodable]
//    public var subjectIds: [AnyCodable]
//    public var subjectTitles: [AnyCodable]
//    public var materialId: String
//    public var altMaterialIds: [AnyCodable]
//    public var materialIds: [AnyCodable]
//    public var materialTitles: [AnyCodable]
//    public var techniqueId: String
//    public var altTechniqueIds: [AnyCodable]
//    public var techniqueIds: [AnyCodable]
//    public var techniqueTitles: [AnyCodable]
//    public var themeTitles: [AnyCodable]
    public var imageId: String
//    public var altImageIds: [AnyCodable]
//    public var documentIds: [AnyCodable]
//    public var soundIds: [AnyCodable]
//    public var videoIds: [AnyCodable]
//    public var textIds: [AnyCodable]
//    public var sectionIds: [AnyCodable]
//    public var sectionTitles: [AnyCodable]
//    public var siteIds: [AnyCodable]
//    public var suggestAutocompleteAll: Set<ArtworkDataSuggestAutocompleteAll>
//    public var lastUpdatedSource: String
//    public var lastUpdated: String
//    public var timestamp: String

    public init(id: Double, title: String, imageId: String, dateDisplay: String, artistDisplay: String, placeOfOrigin: String) {
        self.id = id
//        self.apiModel = apiModel
//        self.apiLink = apiLink
//        self.isBoosted = isBoosted
        self.title = title
//        self.altTitles = altTitles
//        self.thumbnail = thumbnail
//        self.mainReferenceNumber = mainReferenceNumber
//        self.hasNotBeenViewedMuch = hasNotBeenViewedMuch
//        self.boostRank = boostRank
//        self.dateStart = dateStart
//        self.dateEnd = dateEnd
        self.dateDisplay = dateDisplay
//        self.dateQualifierTitle = dateQualifierTitle
//        self.dateQualifierId = dateQualifierId
        self.artistDisplay = artistDisplay
        self.placeOfOrigin = placeOfOrigin
//        self.dimensions = dimensions
//        self.mediumDisplay = mediumDisplay
//        self.inscriptions = inscriptions
//        self.creditLine = creditLine
//        self.publicationHistory = publicationHistory
//        self.exhibitionHistory = exhibitionHistory
//        self.provenanceText = provenanceText
//        self.publishingVerificationLevel = publishingVerificationLevel
//        self.internalDepartmentId = internalDepartmentId
//        self.fiscalYear = fiscalYear
//        self.fiscalYearDeaccession = fiscalYearDeaccession
//        self.isPublicDomain = isPublicDomain
//        self.isZoomable = isZoomable
//        self.maxZoomWindowSize = maxZoomWindowSize
//        self.copyrightNotice = copyrightNotice
//        self.hasMultimediaResources = hasMultimediaResources
//        self.hasEducationalResources = hasEducationalResources
//        self.colorfulness = colorfulness
//        self.color = color
//        self.latitude = latitude
//        self.longitude = longitude
//        self.latlon = latlon
//        self.isOnView = isOnView
//        self.onLoanDisplay = onLoanDisplay
//        self.galleryTitle = galleryTitle
//        self.galleryId = galleryId
//        self.artworkTypeTitle = artworkTypeTitle
//        self.artworkTypeId = artworkTypeId
//        self.departmentTitle = departmentTitle
//        self.departmentId = departmentId
//        self.artistId = artistId
//        self.artistTitle = artistTitle
//        self.altArtistIds = altArtistIds
//        self.artistIds = artistIds
//        self.artistTitles = artistTitles
//        self.categoryIds = categoryIds
//        self.categoryTitles = categoryTitles
//        self.artworkCatalogueIds = artworkCatalogueIds
//        self.termTitles = termTitles
//        self.styleId = styleId
//        self.styleTitle = styleTitle
//        self.altStyleIds = altStyleIds
//        self.styleIds = styleIds
//        self.styleTitles = styleTitles
//        self.classificationId = classificationId
//        self.classificationTitle = classificationTitle
//        self.altClassificationIds = altClassificationIds
//        self.classificationIds = classificationIds
//        self.classificationTitles = classificationTitles
//        self.subjectId = subjectId
//        self.altSubjectIds = altSubjectIds
//        self.subjectIds = subjectIds
//        self.subjectTitles = subjectTitles
//        self.materialId = materialId
//        self.altMaterialIds = altMaterialIds
//        self.materialIds = materialIds
//        self.materialTitles = materialTitles
//        self.techniqueId = techniqueId
//        self.altTechniqueIds = altTechniqueIds
//        self.techniqueIds = techniqueIds
//        self.techniqueTitles = techniqueTitles
//        self.themeTitles = themeTitles
        self.imageId = imageId
//        self.altImageIds = altImageIds
//        self.documentIds = documentIds
//        self.soundIds = soundIds
//        self.videoIds = videoIds
//        self.textIds = textIds
//        self.sectionIds = sectionIds
//        self.sectionTitles = sectionTitles
//        self.siteIds = siteIds
//        self.suggestAutocompleteAll = suggestAutocompleteAll
//        self.lastUpdatedSource = lastUpdatedSource
//        self.lastUpdated = lastUpdated
//        self.timestamp = timestamp
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
//        case apiModel = "api_model"
//        case apiLink = "api_link"
//        case isBoosted = "is_boosted"
        case title
//        case altTitles = "alt_titles"
//        case thumbnail
//        case mainReferenceNumber = "main_reference_number"
//        case hasNotBeenViewedMuch = "has_not_been_viewed_much"
//        case boostRank = "boost_rank"
//        case dateStart = "date_start"
//        case dateEnd = "date_end"
        case dateDisplay = "date_display"
//        case dateQualifierTitle = "date_qualifier_title"
//        case dateQualifierId = "date_qualifier_id"
        case artistDisplay = "artist_display"
        case placeOfOrigin = "place_of_origin"
//        case dimensions
//        case mediumDisplay = "medium_display"
//        case inscriptions
//        case creditLine = "credit_line"
//        case publicationHistory = "publication_history"
//        case exhibitionHistory = "exhibition_history"
//        case provenanceText = "provenance_text"
//        case publishingVerificationLevel = "publishing_verification_level"
//        case internalDepartmentId = "internal_department_id"
//        case fiscalYear = "fiscal_year"
//        case fiscalYearDeaccession = "fiscal_year_deaccession"
//        case isPublicDomain = "is_public_domain"
//        case isZoomable = "is_zoomable"
//        case maxZoomWindowSize = "max_zoom_window_size"
//        case copyrightNotice = "copyright_notice"
//        case hasMultimediaResources = "has_multimedia_resources"
//        case hasEducationalResources = "has_educational_resources"
//        case colorfulness
//        case color
//        case latitude
//        case longitude
//        case latlon
//        case isOnView = "is_on_view"
//        case onLoanDisplay = "on_loan_display"
//        case galleryTitle = "gallery_title"
//        case galleryId = "gallery_id"
//        case artworkTypeTitle = "artwork_type_title"
//        case artworkTypeId = "artwork_type_id"
//        case departmentTitle = "department_title"
//        case departmentId = "department_id"
//        case artistId = "artist_id"
//        case artistTitle = "artist_title"
//        case altArtistIds = "alt_artist_ids"
//        case artistIds = "artist_ids"
//        case artistTitles = "artist_titles"
//        case categoryIds = "category_ids"
//        case categoryTitles = "category_titles"
//        case artworkCatalogueIds = "artwork_catalogue_ids"
//        case termTitles = "term_titles"
//        case styleId = "style_id"
//        case styleTitle = "style_title"
//        case altStyleIds = "alt_style_ids"
//        case styleIds = "style_ids"
//        case styleTitles = "style_titles"
//        case classificationId = "classification_id"
//        case classificationTitle = "classification_title"
//        case altClassificationIds = "alt_classification_ids"
//        case classificationIds = "classification_ids"
//        case classificationTitles = "classification_titles"
//        case subjectId = "subject_id"
//        case altSubjectIds = "alt_subject_ids"
//        case subjectIds = "subject_ids"
//        case subjectTitles = "subject_titles"
//        case materialId = "material_id"
//        case altMaterialIds = "alt_material_ids"
//        case materialIds = "material_ids"
//        case materialTitles = "material_titles"
//        case techniqueId = "technique_id"
//        case altTechniqueIds = "alt_technique_ids"
//        case techniqueIds = "technique_ids"
//        case techniqueTitles = "technique_titles"
//        case themeTitles = "theme_titles"
        case imageId = "image_id"
//        case altImageIds = "alt_image_ids"
//        case documentIds = "document_ids"
//        case soundIds = "sound_ids"
//        case videoIds = "video_ids"
//        case textIds = "text_ids"
//        case sectionIds = "section_ids"
//        case sectionTitles = "section_titles"
//        case siteIds = "site_ids"
//        case suggestAutocompleteAll = "suggest_autocomplete_all"
//        case lastUpdatedSource = "last_updated_source"
//        case lastUpdated = "last_updated"
//        case timestamp
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
//        try container.encode(apiModel, forKey: .apiModel)
//        try container.encode(apiLink, forKey: .apiLink)
//        try container.encode(isBoosted, forKey: .isBoosted)
        try container.encode(title, forKey: .title)
//        try container.encodeIfPresent(altTitles, forKey: .altTitles)
//        try container.encode(thumbnail, forKey: .thumbnail)
//        try container.encode(mainReferenceNumber, forKey: .mainReferenceNumber)
//        try container.encode(hasNotBeenViewedMuch, forKey: .hasNotBeenViewedMuch)
//        try container.encodeIfPresent(boostRank, forKey: .boostRank)
//        try container.encode(dateStart, forKey: .dateStart)
//        try container.encode(dateEnd, forKey: .dateEnd)
        try container.encode(dateDisplay, forKey: .dateDisplay)
//        try container.encode(dateQualifierTitle, forKey: .dateQualifierTitle)
//        try container.encode(dateQualifierId, forKey: .dateQualifierId)
        try container.encode(artistDisplay, forKey: .artistDisplay)
        try container.encode(placeOfOrigin, forKey: .placeOfOrigin)
//        try container.encode(dimensions, forKey: .dimensions)
//        try container.encode(mediumDisplay, forKey: .mediumDisplay)
//        try container.encodeIfPresent(inscriptions, forKey: .inscriptions)
//        try container.encode(creditLine, forKey: .creditLine)
//        try container.encodeIfPresent(publicationHistory, forKey: .publicationHistory)
//        try container.encodeIfPresent(exhibitionHistory, forKey: .exhibitionHistory)
//        try container.encodeIfPresent(provenanceText, forKey: .provenanceText)
//        try container.encode(publishingVerificationLevel, forKey: .publishingVerificationLevel)
//        try container.encode(internalDepartmentId, forKey: .internalDepartmentId)
//        try container.encodeIfPresent(fiscalYear, forKey: .fiscalYear)
//        try container.encodeIfPresent(fiscalYearDeaccession, forKey: .fiscalYearDeaccession)
//        try container.encode(isPublicDomain, forKey: .isPublicDomain)
//        try container.encode(isZoomable, forKey: .isZoomable)
//        try container.encode(maxZoomWindowSize, forKey: .maxZoomWindowSize)
//        try container.encodeIfPresent(copyrightNotice, forKey: .copyrightNotice)
//        try container.encode(hasMultimediaResources, forKey: .hasMultimediaResources)
//        try container.encode(hasEducationalResources, forKey: .hasEducationalResources)
//        try container.encode(colorfulness, forKey: .colorfulness)
//        try container.encodeIfPresent(color, forKey: .color)
//        try container.encodeIfPresent(latitude, forKey: .latitude)
//        try container.encodeIfPresent(longitude, forKey: .longitude)
//        try container.encodeIfPresent(latlon, forKey: .latlon)
//        try container.encode(isOnView, forKey: .isOnView)
//        try container.encodeIfPresent(onLoanDisplay, forKey: .onLoanDisplay)
//        try container.encode(galleryTitle, forKey: .galleryTitle)
//        try container.encode(galleryId, forKey: .galleryId)
//        try container.encode(artworkTypeTitle, forKey: .artworkTypeTitle)
//        try container.encode(artworkTypeId, forKey: .artworkTypeId)
//        try container.encode(departmentTitle, forKey: .departmentTitle)
//        try container.encode(departmentId, forKey: .departmentId)
//        try container.encode(artistId, forKey: .artistId)
//        try container.encode(artistTitle, forKey: .artistTitle)
//        try container.encode(altArtistIds, forKey: .altArtistIds)
//        try container.encode(artistIds, forKey: .artistIds)
//        try container.encode(artistTitles, forKey: .artistTitles)
//        try container.encode(categoryIds, forKey: .categoryIds)
//        try container.encode(categoryTitles, forKey: .categoryTitles)
//        try container.encode(artworkCatalogueIds, forKey: .artworkCatalogueIds)
//        try container.encode(termTitles, forKey: .termTitles)
//        try container.encodeIfPresent(styleId, forKey: .styleId)
//        try container.encodeIfPresent(styleTitle, forKey: .styleTitle)
//        try container.encode(altStyleIds, forKey: .altStyleIds)
//        try container.encode(styleIds, forKey: .styleIds)
//        try container.encode(styleTitles, forKey: .styleTitles)
//        try container.encode(classificationId, forKey: .classificationId)
//        try container.encode(classificationTitle, forKey: .classificationTitle)
//        try container.encode(altClassificationIds, forKey: .altClassificationIds)
//        try container.encode(classificationIds, forKey: .classificationIds)
//        try container.encode(classificationTitles, forKey: .classificationTitles)
//        try container.encode(subjectId, forKey: .subjectId)
//        try container.encode(altSubjectIds, forKey: .altSubjectIds)
//        try container.encode(subjectIds, forKey: .subjectIds)
//        try container.encode(subjectTitles, forKey: .subjectTitles)
//        try container.encode(materialId, forKey: .materialId)
//        try container.encode(altMaterialIds, forKey: .altMaterialIds)
//        try container.encode(materialIds, forKey: .materialIds)
//        try container.encode(materialTitles, forKey: .materialTitles)
//        try container.encode(techniqueId, forKey: .techniqueId)
//        try container.encode(altTechniqueIds, forKey: .altTechniqueIds)
//        try container.encode(techniqueIds, forKey: .techniqueIds)
//        try container.encode(techniqueTitles, forKey: .techniqueTitles)
//        try container.encode(themeTitles, forKey: .themeTitles)
        try container.encode(imageId, forKey: .imageId)
//        try container.encode(altImageIds, forKey: .altImageIds)
//        try container.encode(documentIds, forKey: .documentIds)
//        try container.encode(soundIds, forKey: .soundIds)
//        try container.encode(videoIds, forKey: .videoIds)
//        try container.encode(textIds, forKey: .textIds)
//        try container.encode(sectionIds, forKey: .sectionIds)
//        try container.encode(sectionTitles, forKey: .sectionTitles)
//        try container.encode(siteIds, forKey: .siteIds)
//        try container.encode(suggestAutocompleteAll, forKey: .suggestAutocompleteAll)
//        try container.encode(lastUpdatedSource, forKey: .lastUpdatedSource)
//        try container.encode(lastUpdated, forKey: .lastUpdated)
//        try container.encode(timestamp, forKey: .timestamp)
    }
}

