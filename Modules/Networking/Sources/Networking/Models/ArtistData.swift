//
// ArtistData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ArtistData: Codable, Hashable, Identifiable {

    public var id: Double?
    public var title: String?
    public var birthDate: Double?
    public var birthPlace: String?
    public var deathDate: Double?
    public var artworkIds: [Int]?

    public init(id: Double? = nil, title: String? = nil, birthDate: Double? = nil, birthPlace: String? = nil, deathDate: Double? = nil, artworkIds: [Int]? = nil) {
        self.id = id
        self.title = title
        self.birthDate = birthDate
        self.birthPlace = birthPlace
        self.deathDate = deathDate
        self.artworkIds = artworkIds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case title
        case birthDate = "birth_date"
        case birthPlace = "birth_place"
        case deathDate = "death_date"
        case artworkIds = "artwork_ids"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(title, forKey: .title)
        try container.encode(birthDate, forKey: .birthDate)
        try container.encodeIfPresent(birthPlace, forKey: .birthPlace)
        try container.encodeIfPresent(deathDate, forKey: .deathDate)
        try container.encode(artworkIds, forKey: .artworkIds)
    }
}
